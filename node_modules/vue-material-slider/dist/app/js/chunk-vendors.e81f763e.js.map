{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_fix-re-wks.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/modules/es6.regexp.split.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/es7.array.includes.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/hammerjs/hammer.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_html.js"],"names":["LIBRARY","__webpack_require__","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","this","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","key","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","entries","call","Object","name","values","P","F","anObject","that","result","global","ignoreCase","multiline","unicode","sticky","$keys","enumBugKeys","O","dP","getKeys","defineProperties","Properties","length","i","f","fails","defined","wks","KEY","exec","SYMBOL","fns","strfn","rxfn","String","RegExp","string","arg","isObject","document","is","createElement","it","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","d","__webpack_exports__","SPLIT","$split","isRegExp","_split","$push","push","$SPLIT","LENGTH","LAST_INDEX","NPCG","separator","limit","separator2","match","lastIndex","lastLength","output","flags","lastLastIndex","splitLimit","separatorCopy","source","index","slice","replace","arguments","apply","test","fn","has","SRC","TO_STRING","$toString","Function","TPL","split","inspectSource","val","safe","isFunction","join","dPs","IE_PROTO","Empty","PROTOTYPE","createDict","iframeDocument","iframe","lt","gt","style","display","appendChild","src","contentWindow","open","write","close","create","store","uid","Symbol","USE_SYMBOL","$exports","toString","createDesc","object","value","configurable","get","toObject","ObjectProto","constructor","descriptor","ceil","Math","floor","isNaN","bitmap","enumerable","writable","core","SHARED","version","mode","copyright","ctx","type","own","out","exp","IS_FORCED","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","IS_BIND","B","target","expProto","U","W","R","shared","cof","propertyIsEnumerable","$includes","includes","el","IObject","hasOwnProperty","valueOf","TypeError","$flags","DESCRIPTORS","define","window","self","__g","toInteger","max","min","e","def","tag","stat","__e","IE8_DOM_DEFINE","toPrimitive","defineProperty","Attributes","aFunction","a","b","c","UNSCOPABLES","ArrayProto","Array","MATCH","$iterators","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","__WEBPACK_AMD_DEFINE_RESULT__","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","TYPE_FUNCTION","round","abs","now","Date","setTimeoutContext","timeout","setTimeout","bindFn","invokeArrayArg","isArray","each","obj","iterator","forEach","deprecate","method","message","deprecationMessage","Error","stack","log","console","warn","nextKey","extend","dest","merge","inherit","child","base","properties","childP","baseP","_super","boolOrFn","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parentNode","inStr","str","find","indexOf","trim","inArray","findByKey","toArray","uniqueArray","sort","results","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","PointerEventInput","TouchInput","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","v","clientX","clientY","p1","p2","props","sqrt","atan2","PI","start","end","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","TouchAction","set","cleanTouchActions","actions","hasPanX","hasPanY","touchMap","cssSupports","CSS","supports","compute","update","touchAction","recognizers","recognizer","getTouchAction","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","handlers","oldCssProps","toggleCssProps","item","triggerDomEvent","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","stop","force","stopped","curRecognizer","remove","on","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","g","px","random","addToUnscopables","step","iterated","_t","_i","_k","Arguments","arrayIndexOf","names","done","documentElement"],"mappings":"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","file":"js/chunk-vendors.e81f763e.js","sourcesContent":["'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","'use strict';\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n  var fns = exec(defined, SYMBOL, ''[KEY]);\n  var strfn = fns[0];\n  var rxfn = fns[1];\n  if (fails(function () {\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  })) {\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n  var isRegExp = require('./_is-regexp');\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = {};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n"],"sourceRoot":""}